name: MAIN_DEPLOY_Pipeline
on: 
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  CheckPipelineCriteria:
    runs-on: ubuntu-latest
    steps:
      - name: "getting pipeline context values..."
        run: |
          echo "pipeline was triggered by event :" ${{ github.event_name }} 
          echo "pipeline is based on remote branch :" ${{github.ref_name}} 
      - name: "checking if pipeline criteria is met ..."
        if: |
          github.event_name == 'workflow_dispatch' && 
          github.ref_name != 'main'
        run: |
         echo "This pipeline supports deployment only from main branch. Probably the selected branch is not main ,hence exiting..."
         exit 1


  ValidateChanges:
    needs: CheckPipelineCriteria    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: sfdx-actions/setup-sfdx@v1
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET_SFORG_MAINENVIRON }}
      - name: "installing nodeapp and creating delta package for changes in Main branch..."
        run: |
          sudo npm install sfdx-git-delta@latest -g
          git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          git fetch --all
          git --no-pager diff --name-status head head~1
          sgd --to head --from head~1 --repo . --output .
          cat package/package.xml
      - name: "validating changes in Main branch with full test run against the Production environment..."
        run: sfdx force:source:deploy -x package/package.xml --testlevel=RunLocalTests --checkonly --wait 30

  DeployChanges:
    needs: ValidateChanges    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: sfdx-actions/setup-sfdx@v1
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET_SFORG_MAINENVIRON }}
      - name: "installing nodeapp and creating delta package for changes in Main branch..."
        run: |
          sudo npm install sfdx-git-delta@latest -g
          git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          git fetch --all
          git --no-pager diff --name-status head head~1
          sgd --to head --from head~1 --repo . --output .
          cat package/package.xml
      - name: "deploying changes in Main branch with all test run against the Production environment..."
        run: sfdx force:source:deploy -x package/package.xml --testlevel=RunLocalTests --wait 30 
      