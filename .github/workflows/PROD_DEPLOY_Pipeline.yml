name: PROD_DEPLOY_Pipeline
on: 
  push:
    branches:
      - 'main'
  workflow_dispatch:
    inputs:
      before_commit_sha:
        description: 'BEFORE COMMIT SHA'     
        required: false
        default: ''

jobs:
  CheckPipelineCriteria:
    runs-on: ubuntu-latest
    steps:
      - name: "getting pipeline context values..."
        run: |
          echo "pipeline was triggered by event :" ${{ github.event_name }} 
          echo "pipeline is based on remote branch :" ${{github.ref_name}}      
      - name: "checking if pipeline criteria is met ..."
        if: |
          github.event_name == 'workflow_dispatch' && 
          github.ref_name != 'main'
        run: |
         echo "This pipeline supports deployment only from main branch. Probably the selected branch is not main ,hence exiting..."
         exit 1


  DeployChanges:
    needs: CheckPipelineCriteria   
    runs-on: ubuntu-latest
    steps:
       # Setup the runner environment
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 
      - name: setup the runner
        uses: ./.github/actions/setup-sfdx-runner
        with:
          sfdx-auth-url: ${{ secrets.AUTH_SECRET_SFORG_PRODENVIRON }}      
      
      # Prepare , validate and deploy the delta package
      - name: "create delta package for changes in Main branch..."
        env:
          prev_commit_sha: ${{ github.event.inputs.before_commit_sha}}
        run: |          
          git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'
          git fetch --all          
          if [ "$prev_commit_sha" == "" ] ;then            
            sfdx sgd:source:delta --to "HEAD" --from "HEAD~1" --source force-app --repo . --output .
          else
            sfdx sgd:source:delta --to "HEAD" --from "$prev_commit_sha" --source force-app --repo . --output .
          fi
          cat package/package.xml
          echo "--- destructiveChanges.xml generated with deleted metadata ---"
          cat destructiveChanges/destructiveChanges.xml
      - name: "validate changes in Main branch with full test run against the Production environment..."
        run: |
          sfdx force:source:deploy -x package/package.xml --testlevel=RunLocalTests --checkonly --wait 30
          echo "validating the deletion of removed metadata..."
          sfdx force:mdapi:deploy -d destructiveChanges --ignorewarnings --testlevel=RunLocalTests --checkonly --wait -1
      - name: "deploy changes in Main branch with all test run against the Production environment..."
        run: |
          sfdx force:source:deploy -x package/package.xml --testlevel=NoTestRun --wait 30 
          echo "deleting removed metadata..."
          sfdx force:mdapi:deploy -d destructiveChanges --ignorewarnings --testlevel=NoTestRun --wait -1          
  